# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: beyla
spec:
  image: otel/opentelemetry-collector-contrib:latest
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:

    processors:
      resourcedetection:
        detectors: [env, gcp]
        timeout: 2s
        override: false
      groupbyattrs:
        keys:
          - net.host.name
      resource:
        attributes:
          - key: k8s.pod.ip
            from_attribute: net.host.name
            action: insert
      k8sattributes:
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
      filter:
        traces:
          span:
            - resource.attributes["k8s.pod.name"] == nil
        metrics:
          metric:
            - resource.attributes["k8s.pod.name"] == nil
      resource/jobandinstance:
        attributes:
          - key: service.name
            from_attribute: k8s.pod.name
            action: upsert
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: upsert


    exporters:
      googlemanagedprometheus:
      googlecloud:
      logging:
        loglevel: debug

    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [resourcedetection, groupbyattrs, resource, k8sattributes, filter, resource/jobandinstance]
          exporters: [logging, googlemanagedprometheus]
        traces:
          receivers: [otlp]
          processors: [resourcedetection, groupbyattrs, resource, k8sattributes, filter, resource/jobandinstance]
          exporters: [logging]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
subjects:
- kind: ServiceAccount
  name: otel-collector
  namespace: beyla
roleRef:
  kind: ClusterRole
  name: otel-collector
  apiGroup: rbac.authorization.k8s.io